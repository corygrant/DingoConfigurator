<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:cd="clr-namespace:CanDevices.DingoPdm;assembly=CanDevices">
    <ObjectDataProvider x:Key="VarMapEnumDataSource"
                        ObjectType="{x:Type sys:Enum}"
                        MethodName="GetValues">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="cd:VarMap" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="InputModeEnumDataSource"
                        ObjectType="{x:Type sys:Enum}"
                        MethodName="GetValues">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="cd:InputMode" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="InputPullEnumDataSource"
                        ObjectType="{x:Type sys:Enum}"
                        MethodName="GetValues">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="cd:InputPull" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="ResetModeEnumDataSource"
                        ObjectType="{x:Type sys:Enum}"
                        MethodName="GetValues">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="cd:ResetMode" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="ConditionalEnumDataSource"
                        ObjectType="{x:Type sys:Enum}"
                        MethodName="GetValues">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="cd:Conditional" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="OperatorEnumDataSource"
                        ObjectType="{x:Type sys:Enum}"
                        MethodName="GetValues">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="cd:Operator" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="WiperModeEnumDataSource"
                        ObjectType="{x:Type sys:Enum}"
                        MethodName="GetValues">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="cd:WiperMode" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="WiperStateEnumDataSource"
                        ObjectType="{x:Type sys:Enum}"
                        MethodName="GetValues">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="cd:WiperState" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="WiperSpeedEnumDataSource"
                        ObjectType="{x:Type sys:Enum}"
                        MethodName="GetValues">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="cd:WiperSpeed" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="InputEdgeEnumDataSource"
                        ObjectType="{x:Type sys:Enum}"
                        MethodName="GetValues">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="cd:InputEdge" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="KeypadModelEnumDataSource"
                        ObjectType="{x:Type sys:Enum}"
                        MethodName="GetValues">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="cd:KeypadModel" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="BlinkBacklightColorEnumDataSource"
                        ObjectType="{x:Type sys:Enum}"
                        MethodName="GetValues">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="cd:BlinkMarineBacklightColor" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="BlinkButtonColorEnumDataSource"
                        ObjectType="{x:Type sys:Enum}"
                        MethodName="GetValues">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="cd:BlinkMarineButtonColor" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <Style x:Key="CenterAlignedHeaderStyle" TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5,2,5,2"/>
    </Style>
    <Style x:Key="ValidationErrorTextBoxStyle" TargetType="TextBox">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="#323232" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SelectionBrush" Value="LightGreen"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="Background" Value="Red"/>
                <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="DataGridCell" x:Key="ValidationCellStyle">
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Height" Value="25"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>