<UserControl x:Class="DingoConfigurator.Views.SoftButtonBoxView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:DingoConfigurator.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d"
             d:DesignHeight="600"
             d:DesignWidth="800">
    
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        
        <Style x:Key="KeypadButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="60"/>
            <Setter Property="Height" Value="60"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsPressed}" Value="True">
                    <Setter Property="Background" Value="DarkGray"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <DataTemplate x:Key="ButtonTemplate">
            <Button Style="{StaticResource KeypadButtonStyle}"
                    Content="{Binding Number}"
                    Command="{Binding DataContext.ButtonPressCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    CommandParameter="{Binding Index}">
                <Button.InputBindings>
                    <MouseBinding Gesture="LeftClick" 
                                  Command="{Binding DataContext.ButtonPressCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                  CommandParameter="{Binding Index}"/>
                </Button.InputBindings>
            </Button>
        </DataTemplate>
    </UserControl.Resources>
    
    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
        <StackPanel Margin="10">
            
            <!-- Header -->
            <TextBlock Text="CAN Keypad Emulator" 
                      FontSize="24" 
                      FontWeight="Bold" 
                      Margin="0,0,0,20"/>
            
            <!-- Configuration Section -->
            <GroupBox Header="Configuration" Margin="0,0,0,15">
                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    
                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Keypad Model:" 
                              VerticalAlignment="Center" Margin="0,0,10,0"/>
                    <ComboBox Grid.Row="0" Grid.Column="1" 
                             ItemsSource="{Binding KeypadModels}"
                             SelectedItem="{Binding SelectedKeypadModel}"
                             MinWidth="150" Margin="0,0,20,0"/>
                    
                    <TextBlock Grid.Row="0" Grid.Column="2" Text="Base CAN ID:" 
                              VerticalAlignment="Center" Margin="0,0,10,0"/>
                    <TextBox Grid.Row="0" Grid.Column="3" 
                            Text="{Binding SoftBtnBox.BaseId}" 
                            MinWidth="100"/>
                    
                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Buttons:" 
                              VerticalAlignment="Center" Margin="0,5,10,0"/>
                    <TextBlock Grid.Row="1" Grid.Column="1" 
                              Text="{Binding NumButtons}" 
                              VerticalAlignment="Center" Margin="0,5,0,0"/>
                    
                    <TextBlock Grid.Row="1" Grid.Column="2" Text="Dials:" 
                              VerticalAlignment="Center" Margin="0,5,10,0"/>
                    <TextBlock Grid.Row="1" Grid.Column="3" 
                              Text="{Binding NumDials}" 
                              VerticalAlignment="Center" Margin="0,5,0,0"/>
                    
                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Status:" 
                              VerticalAlignment="Center" Margin="0,5,10,0"/>
                    <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" Margin="0,5,0,0">
                        <Ellipse Width="12" Height="12" VerticalAlignment="Center" Margin="0,0,5,0">
                            <Ellipse.Style>
                                <Style TargetType="Ellipse">
                                    <Setter Property="Fill" Value="Red"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SoftBtnBox.IsConnected}" Value="True">
                                            <Setter Property="Fill" Value="Green"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Ellipse.Style>
                        </Ellipse>
                        <TextBlock VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Text" Value="Disconnected"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SoftBtnBox.IsConnected}" Value="True">
                                            <Setter Property="Text" Value="Connected"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                    
                    <CheckBox Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2" 
                             Content="Colors Enabled" 
                             IsChecked="{Binding ColorsEnabled, Mode=OneWay}" 
                             IsEnabled="False"
                             Margin="0,5,0,0"/>
                </Grid>
            </GroupBox>
            
            <!-- Button Grid Section -->
            <GroupBox Header="Button Controls" Margin="0,0,0,15">
                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                    <ItemsControl ItemsSource="{Binding ButtonStates}" 
                                 ItemTemplate="{StaticResource ButtonTemplate}" Margin="10">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="5" HorizontalAlignment="Left"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ScrollViewer>
            </GroupBox>
            
            <!-- Dial Controls Section -->
            <GroupBox Header="Dial Controls" 
                     Visibility="{Binding HasDials, Converter={StaticResource BooleanToVisibilityConverter}}"
                     Margin="0,0,0,15">
                <ItemsControl ItemsSource="{Binding DialStates}" Margin="10">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" Margin="0,5">
                                <TextBlock Text="{Binding Number, StringFormat='Dial {0}:'}" 
                                          Width="60" VerticalAlignment="Center"/>
                                <Slider Value="{Binding Value, UpdateSourceTrigger=PropertyChanged}" 
                                       Minimum="{Binding MinValue}" 
                                       Maximum="{Binding MaxValue}"
                                       Width="200" 
                                       Margin="10,0"
                                       TickFrequency="1000"
                                       IsSnapToTickEnabled="True"/>
                                <TextBox Text="{Binding Value}" 
                                        Width="80" 
                                        Margin="10,0"/>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </GroupBox>
            
            <!-- LED Status Section -->
            <GroupBox Header="LED Status" 
                     Visibility="{Binding ColorsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                     Margin="0,0,0,15">
                <ItemsControl ItemsSource="{Binding ButtonStates}" Margin="10">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" Margin="2">
                                <TextBlock Text="{Binding Number, StringFormat='Btn {0}:'}" 
                                          Width="50" VerticalAlignment="Center"/>
                                <Rectangle Width="20" Height="20" 
                                          Stroke="Black" 
                                          Margin="5,0">
                                    <Rectangle.Style>
                                        <Style TargetType="Rectangle">
                                            <Setter Property="Fill" Value="Gray"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding LedColor}" Value="Off">
                                                    <Setter Property="Fill" Value="Gray"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding LedColor}" Value="Red">
                                                    <Setter Property="Fill" Value="Red"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding LedColor}" Value="Green">
                                                    <Setter Property="Fill" Value="Green"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding LedColor}" Value="Blue">
                                                    <Setter Property="Fill" Value="Blue"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding LedColor}" Value="Orange">
                                                    <Setter Property="Fill" Value="Orange"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding LedColor}" Value="Violet">
                                                    <Setter Property="Fill" Value="Violet"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding LedColor}" Value="Cyan">
                                                    <Setter Property="Fill" Value="Cyan"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding LedColor}" Value="White">
                                                    <Setter Property="Fill" Value="White"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>
                                <TextBlock Text="{Binding LedColor}" 
                                          VerticalAlignment="Center" 
                                          Margin="5,0"/>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="4"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </GroupBox>
            
            <!-- Instructions -->
            <GroupBox Header="Instructions" Margin="0,0,0,15">
                <StackPanel Margin="10">
                    <TextBlock TextWrapping="Wrap" Margin="0,0,0,5">
                        • Select a keypad model from the dropdown to configure the emulator
                    </TextBlock>
                    <TextBlock TextWrapping="Wrap" Margin="0,0,0,5">
                        • Click buttons to simulate press/release (buttons will stay pressed until clicked again)
                    </TextBlock>
                    <TextBlock TextWrapping="Wrap" Margin="0,0,0,5">
                        • Use dial sliders to adjust rotary encoder positions (Blink models with dials only)
                    </TextBlock>
                    <TextBlock TextWrapping="Wrap" Margin="0,0,0,5">
                        • LED colors will be displayed for Blink Marine keypads when controlled by the PDM
                    </TextBlock>
                    <TextBlock TextWrapping="Wrap">
                        • The emulator will automatically send CAN messages at 100ms intervals when connected
                    </TextBlock>
                </StackPanel>
            </GroupBox>
            
        </StackPanel>
    </ScrollViewer>
</UserControl>
